<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.panko</groupId>
    <artifactId>apod</artifactId>
    <version>0.8</version>

    <name>${project.name}</name>

    <properties>
        <project.version>0.8</project.version>
        <project.name>Astronomy Picture Of The Day</project.name>
        <mainClass>com.panko.apod.MainApplication</mainClass>
        <moduleName>com.panko.apod</moduleName>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.java>17</version.java>

        <version.jna>5.12.1</version.jna>
        <version.openjfx>19.0.2.1</version.openjfx>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${version.openjfx}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${version.openjfx}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${version.openjfx}</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20230227</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${version.jna}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                </configuration>
            </plugin>

            <!-- Copying all required JAR dependencies into the /libs folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Need to compile App (without dependencies) to JAR file
            and put it to /modules folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/modules</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <version>1.0.0.RC3</version>
                <executions>

                    <!-- Generating module-info.java descriptors for  -->
                    <!-- legacy artifacts (without module-info.java)
                    into /moditect folder.  -->
                    <execution>
                        <id>generate-module-info</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-module-info</goal>
                        </goals>
                        <configuration>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>org.json</groupId>
                                        <artifactId>json</artifactId>
                                        <version>20230227</version>
                                    </artifact>
                                </module>
                                <module>
                                    <artifact>
                                        <groupId>net.java.dev.jna</groupId>
                                        <artifactId>jna</artifactId>
                                        <version>${version.jna}</version>
                                    </artifact>
                                </module>
                            </modules>
                        </configuration>
                    </execution>

                    <!-- Build and add JARs with module descriptors to the
                     /modules folder -->
                    <execution>
                        <id>add-module-infos</id>
                        <phase>package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <jvmVersion>${version.java}</jvmVersion>
                            <failOnWarning>false</failOnWarning>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>org.json</groupId>
                                        <artifactId>json</artifactId>
                                        <version>20230227</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module org.json {
                                        exports org.json;
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>org.openjfx</groupId>
                                        <artifactId>javafx-graphics</artifactId>
                                        <version>${version.openjfx}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module javafx.graphics {
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>org.openjfx</groupId>
                                        <artifactId>javafx-fxml</artifactId>
                                        <version>${version.openjfx}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module javafx.fxml {
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>org.openjfx</groupId>
                                        <artifactId>javafx-controls</artifactId>
                                        <version>${version.openjfx}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module javafx.controls {
                                        }
                                    </moduleInfoSource>
                                </module>

                                <module>
                                    <artifact>
                                        <groupId>net.java.dev.jna</groupId>
                                        <artifactId>jna</artifactId>
                                        <version>${version.jna}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module com.sun.jna {
                                        }
                                    </moduleInfoSource>
                                </module>
                            </modules>
                        </configuration>
                    </execution>

                    <!-- To create a modular runtime image
                    (Compiled app with a ready-to-run Shell script)
                    into a /jlink-image folder -->
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>create-runtime-image</goal>
                        </goals>
                        <configuration>
                            <modulePath>
                                <path>${project.build.directory}/modules</path>
                            </modulePath>
                            <modules>
                                <module>${moduleName}</module>

                                <module>org.json</module>
                                <module>com.sun.jna</module>

                                <module>javafx.fxml</module>
                                <module>javafx.graphics</module>
                                <module>javafx.controls</module>
                            </modules>
                            <launcher>
                                <name>apodLauncher</name>
                                <module>com.panko.apod/com.panko.apod.MainApplication</module>
                                <!--                                <module>${moduleName}/${mainClass}</module>-->
                            </launcher>
                            <outputDirectory>
                                ${project.build.directory}/jlink-image
                            </outputDirectory>

                            <!-- NONE, APP, APP_WITH_DEPENDENCIES -->
                            <jarInclusionPolicy>NONE</jarInclusionPolicy>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Need to compile App with all the dependencies to executable installer
             into a /dist folder -->
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <name>${project.name}</name>
                    <appVersion>${project.version}</appVersion>
                    <vendor>com.panko</vendor>

                    <mainClass>${mainClass}</mainClass>
                    <destination>target/dist</destination>
                    <module>com.panko.apod/MainApplication</module>
                    <runtimeImage>target/jlink-image</runtimeImage>
                    <icon>src/main/resources/img/logo.ico</icon>

                    <winMenu>true</winMenu>
                    <winShortcut>true</winShortcut>
                    <winDirChooser>true</winDirChooser>
                    <javaOptions>
                        <option>-Dfile.encoding=UTF-8</option>
                    </javaOptions>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
            </resource>
        </resources>
    </build>
</project>